# cluster.yaml ========================================= 

# An unique identifier for the head node and workers of this cluster.
cluster_name: nathan #<YOUR NAME>

# The minimum number of workers nodes to launch in addition to the head
# node. This number should be >= 0.
min_workers: 1 #<NUM WORKERS IN CLUSTER>

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers.
max_workers: 1

# The initial number of worker nodes to launch in addition to the head
# node. When the cluster is first brought up (or when it is refreshed with a
# subsequent `ray up`) this number of nodes will be started.
initial_workers: 1

# The autoscaler will scale up the cluster to this target fraction of resource
# usage. For example, if a cluster of 10 nodes is 100% busy and
# target_utilization is 0.8, it would resize the cluster to 13. This fraction
# can be decreased to increase the aggressiveness of upscaling.
target_utilization_fraction: 0.8

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 1

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-west-1
    availability_zone: us-west-1a

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu
# By default Ray creates a new private keypair, but you can also use your own.
# If you do so, make sure to also set "KeyName" in the head and worker node
# configurations below.
    ssh_private_key: /Users/nathan/.ssh/nathan.pem

# Provider-specific config for the head node, e.g. instance type. By default
# Ray will auto-configure unspecified fields such as SubnetId and KeyName.
# For more documentation on available fields, see:
# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances
head_node:
    InstanceType: c4.8xlarge # m4.4xlarge # c4.4xlarge
    ImageId: ami-0c047f3ddd3939b30  # Flow AMI (Ubuntu)
    KeyName: nathan
    InstanceMarketOptions:
        MarketType: spot
         #Additional options can be found in the boto docs, e.g.
        SpotOptions:
            MaxPrice: "1.0"
## You can provision additional disk space with a conf as follows
#    BlockDeviceMappings:
#        - DeviceName: /dev/sda1
#          Ebs:
#              VolumeSize: 120

    # Additional options in the boto docs.

# Provider-specific config for worker nodes, e.g. instance type. By default
# Ray will auto-configure unspecified fields such as SubnetId and KeyName.
# For more documentation on available fields, see:
# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances
worker_nodes:
    InstanceType: c4.8xlarge
    ImageId: ami-0c047f3ddd3939b30 # Flow AMI (Ubuntu)
    KeyName: nathan
    #Run workers on spot by default. Comment this out to use on-demand.
    InstanceMarketOptions:
        MarketType: spot
         # Additional options can be found in the boto docs, e.g.
        SpotOptions:
            MaxPrice: "1.0"

    # Additional options in the boto docs.

setup_commands:
    # checkout your desired branch on all worker nodes
    - cd ~/flow && git remote add cdc_bottlenecks https://github.com/eugenevinitsky/cdc_bottlenecks.git
    - cd ~/flow && git fetch cdc_bottlenecks && git checkout cdc_bottlenecks/experiments_nathan
    # set up ray by pip installing and copying over rllib and tune folder
    - pip install --upgrade pyzmq notebook
    - pip install -r ~/flow/requirements.txt
    - python ~/flow/scripts/replace_rnn_sequence.py
    - pip install boto3==1.10.45  # 1.4.8 adds InstanceMarketOptions
    - pip install awscli==1.16.309
    - pip install torch==1.4.0


# Custom commands that will be run on the head node after common setup.
head_setup_commands: []

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: []

# Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - ulimit -n 65536; ray start --head --redis-port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --object-store-memory=20000000000

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - >-
      ulimit -n 65536;
      ray start
      --redis-address=$RAY_HEAD_IP:6379
      --object-manager-port=8076
      --object-store-memory=80000000000
